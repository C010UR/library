services:
  app:
    build: docker/php
    container_name: library
    ports:
      - '9000'
      - '9003'
    volumes:
      - ./:/srv/app:rw
      - php-socket:/run/php:rw
    group_add:
      - "1000"
    extra_hosts:
      - host.docker.internal:host-gateway
    env_file:
      - ./.env

  caddy:
    image: caddy:2.8-alpine
    container_name: library-caddy
    cap_add:
      - NET_ADMIN
    ports:
      - '80:80'
      - '443:443'
      - '443:443/udp'
    volumes:
      - php-socket:/run/php:rw
      - caddy-data:/data:rw
      - ./docker/caddy/Caddyfile:/etc/caddy/Caddyfile:ro
      - ./docker/caddy/config:/config:rw
      - ./public:/srv/app/public:rw
    restart: unless-stopped

  postgres:
    image: postgres:16.4-alpine3.20
    container_name: library-database
    environment:
      POSTGRES_DB: ${DATABASE:-app}
      POSTGRES_USER: ${DATABASE_USER:-app}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD:-!ChangeMe!}
      POSTGRES_CHARSET: ${DATABASE_CHARSET:-utf8}
      PGUSER: ${DATABASE_USER:-app}
    ports:
      - '5432:5432'
    volumes:
      - ./docker/postgres/data:/var/lib/postgresql/data:rw
    restart: unless-stopped
    healthcheck:
      test: pg_isready -d ${DATABASE:-app}
      interval: 5s
      timeout: 2s
      retries: 5

  localstack:
    image: localstack/localstack:3.7
    container_name: library-localstack
    ports:
      - '4566:4566'
    environment:
      DEBUG: '1'
      SERVICES: 'sqs,s3'
      AWS_DEFAULT_REGION: '${AWS_REGION:-us-east-1}'
      AWS_REGION: '${AWS_REGION:-us-east-1}'
      LOCALSTACK_HOST: '${LOCALSTACK_URL:-localstack}'
      SKIP_SSL_CERT_DOWNLOAD: '1'
      PERSISTENCE: '1'
    volumes:
      - localstack-data:/var/lib/localstack:rw
      - /var/run/docker.sock:/var/run/docker.sock:rw
    networks:
      default:
        aliases:
          - ${LOCALSTACK_URL:-localstack}
    restart: unless-stopped
    healthcheck:
      test: >-
        awslocal sqs list-queues && 
        awslocal s3 list-buckets
      interval: 5s
      timeout: 2s
      retries: 5

  ## TODO: Migrate to valkey or smth
  redis:
    image: redis:7.4-alpine
    container_name: library-redis
    ports:
      - '6379:6379'
    volumes:
      - redis-data:/data:rw
    restart: unless-stopped
    healthcheck:
      test: redis-cli ping
      interval: 5s
      timeout: 2s
      retries: 5

  mailer:
    image: axllent/mailpit
    ports:
      - "1025:1025"
      - "8025:8025"
    environment:
      MP_SMTP_AUTH_ACCEPT_ANY: '1'
      MP_SMTP_AUTH_ALLOW_INSECURE: '1'

volumes:
  redis-data:
  localstack-data:
  php-socket:
  php-public:
  caddy-data:
  caddy-config:
